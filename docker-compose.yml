version: '3.9'
services:
  db:
    image: postgres:15.1-alpine
    volumes:
      - dbdata:/var/lib/postgresql/data
    env_file:
      - am.env

  nginx:
    build:
      context: ./nginx
      args:
        - NGINX_CONF=nginx.conf
    volumes:
       - ./src:/src
       - static:/static
       - media:/media
    env_file:
      - am.env
    depends_on:
      - core
    links:
      - core
    ports:
      - "8000:8000"

  core:
    build: ./am-core
    command: /bin/sh -c "python manage.py collectstatic --noinput --settings=settings.dev && python manage.py migrate --settings=settings.dev && python manage.py runserver 0.0.0.0:8081 --settings=settings.dev"
    volumes:
       - ./am-core:/am-core
       - static:/static
       - media:/media
    env_file:
      - am.env
    links:
      - db
    depends_on:
      - db
    expose:
      - "8081"

#  front:
#    build: ./am-front
#    command: /bin/sh -c "npm run dev"
#    # command: /bin/sh -c "npm run build && npm run serve"
#    volumes:
#      - ./am-front:/app
#    ports:
#      - 8282:3000
#      - 8383:9000
#    links:
#      - nginx
#
#  node:
#    build: ./am-static
#    command: /bin/sh -c "sleep 365d"
#    volumes:
#       - ./am-static:/am-static
#       - ./am-core/static:/static
#       - ./am-core/media:/media

  front:
    build: ./am-front
    command: /bin/sh -c "sleep 1d;"
    links:
      - nginx
    volumes:
      - ./am-front:/app
      - ./am-core/static/posts:/app/build


volumes:
  dbdata:
  static:
  media:
